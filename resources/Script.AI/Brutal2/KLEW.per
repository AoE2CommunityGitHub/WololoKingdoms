(defrule
	(up-compare-goal gl-map-style != WATER)
=>
	(set-strategic-number sn-maximum-food-drop-distance 10)
	(set-strategic-number sn-maximum-wood-drop-distance 10)
	(set-strategic-number sn-maximum-gold-drop-distance 10)
	(set-goal gl-fast-castle 1)
	(set-strategic-number sn-castle-age-strategy klew)
	(disable-self)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(population-headroom > 0)
	(housing-headroom < 3)
	(up-pending-objects c: house < 1)
	(can-build house)
=>
	(build house)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(population-headroom > 0)
	(building-type-count-total barracks > 0)
	(housing-headroom < 3)
	(up-pending-objects c: house < 2)
	(can-build house)
=>
	(build house)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(population-headroom > 0)
	(building-type-count-total barracks > 0)
	(housing-headroom < 6)
	(up-pending-objects c: house < 1)
	(can-build house)
=>
	(build house)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	
	(unit-type-count villager < 11)
=>
	(set-strategic-number sn-enable-training-queue 1)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	
	(unit-type-count villager >= 11)
	(up-research-status c: ri-loom < research-pending)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	
	(unit-type-count villager >= 11)
	(food-amount <= 499) ;249
	(unit-type-count-total villager < 24)
	(up-research-status c: ri-loom >= research-pending)
=>
	(set-strategic-number sn-enable-training-queue 1)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)	
	(unit-type-count-total villager >= 19)
	(or(food-amount >= 500) ; 250
	   (unit-type-count-total villager >= 24))
=>
	(set-strategic-number sn-enable-training-queue 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(current-age >= feudal-age)
=>
	(set-strategic-number sn-enable-training-queue 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(unit-type-count-total villager < max-civ)
	(up-research-status c: ri-loom < research-pending)
	(unit-type-count villager < 10)
	(can-train villager)
=>
	(train villager)
	(enable-timer 46 21)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(or(unit-type-count-total villager >= 24)
	   (game-time > 560))
	(can-research feudal-age)
=>
	(research feudal-age)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	
	(or(food-amount < 50)
	   (and(civ-selected mayan)(housing-headroom == 0)))
	(not(can-train villager))
	(can-research ri-loom)
=>
	(research ri-loom)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	
	(unit-type-count-total villager >= 10)
	(can-research ri-loom)
=>
	(research ri-loom)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(unit-type-count-total villager < max-civ)
	(up-research-status c: ri-loom >= research-pending)
	;(food-amount < 450)
	(unit-type-count villager < 24)
	(can-train villager)
=>
	(train villager)
	(enable-timer 46 21)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(unit-type-count-total villager < max-civ)
	;(food-amount < 450)
	(up-research-status c: ri-loom >= research-pending)
	(unit-type-count-total villager < 24) ; (unit-type-count-total villager < 26)
	(can-train villager)
=>
	(train villager)
	(enable-timer 46 21)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(wood-amount > 130)
	(housing-headroom > 3)
	(building-type-count-total mill == 0)
	(or(unit-type-count-total villager > 8)
	   (unit-type-count villager-forager > 0))
	(resource-found food)
	(can-build mill)
=>
	(build mill)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(wood-amount > 130)
	(housing-headroom > 3)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp == 0)
	(game-time > 30)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(build lumber-camp)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(housing-headroom > 3)
	(building-type-count-total mill > 0)
	(building-type-count-total lumber-camp < 2)
	(dropsite-min-distance wood > 3)
	(resource-found wood)
	(can-build lumber-camp)
=>
	(build lumber-camp)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER)
	(building-type-count-total mill > 0)
	(building-type-count lumber-camp > 0)
	(dropsite-min-distance wood < 3)
	(building-type-count-total farm < 4)
	(can-build farm)
=>
	(build farm)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager < 8)
=>
	(set-strategic-number sn-wood-gatherer-percentage 0)
	(set-strategic-number sn-food-gatherer-percentage 100)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 9)
=>
	(set-strategic-number sn-wood-gatherer-percentage 14)
	(set-strategic-number sn-food-gatherer-percentage 85)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 10)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 11)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 12)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 13)
=>
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 14)
=>
	(set-strategic-number sn-wood-gatherer-percentage 25)
	(set-strategic-number sn-food-gatherer-percentage 75)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 15)
=>
	(set-strategic-number sn-wood-gatherer-percentage 23)
	(set-strategic-number sn-food-gatherer-percentage 77)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 16)
=>
	(set-strategic-number sn-wood-gatherer-percentage 21)
	(set-strategic-number sn-food-gatherer-percentage 79)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 17)
=>
	(set-strategic-number sn-wood-gatherer-percentage 20)
	(set-strategic-number sn-food-gatherer-percentage 80)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 18)
=>
	(set-strategic-number sn-wood-gatherer-percentage 27)
	(set-strategic-number sn-food-gatherer-percentage 73)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 19)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 20)
=>
	(set-strategic-number sn-wood-gatherer-percentage 35)
	(set-strategic-number sn-food-gatherer-percentage 65)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 33)
	(set-strategic-number sn-food-gatherer-percentage 67)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 31)
	(set-strategic-number sn-food-gatherer-percentage 69)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(unit-type-count villager == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 30)
	(set-strategic-number sn-food-gatherer-percentage 70)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	;(up-compare-goal gl-strategy == mix)
	(current-age == dark-age)
	(unit-type-count villager >= 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 71)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == dark-age)
	(unit-type-count-total villager == 21)
=>
	(set-strategic-number sn-wood-gatherer-percentage 42)
	(set-strategic-number sn-food-gatherer-percentage 58)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == dark-age)
	(unit-type-count-total villager == 22)
=>
	(set-strategic-number sn-wood-gatherer-percentage 40)
	(set-strategic-number sn-food-gatherer-percentage 60)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == dark-age)
	(unit-type-count-total villager == 23)
=>
	(set-strategic-number sn-wood-gatherer-percentage 39)
	(set-strategic-number sn-food-gatherer-percentage 61)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == dark-age)
	(unit-type-count-total villager == 24)
=>
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-food-gatherer-percentage 63)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(building-type-count-total market == 0)
	(can-build market)
=>
	(build market)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(building-type-count-total blacksmith == 0)
	(can-build blacksmith)
=>
	(build blacksmith)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age < research-pending)
	(can-sell-commodity stone)
=>
	(sell-commodity stone)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(building-type-count-total mining-camp == 0)
	(resource-found gold)
	(stone-amount == 0)
	(can-build mining-camp)
=>
	(build mining-camp)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == feudal-age)
	(unit-type-count-total villager == 24)
	(building-type-count-total mining-camp == 0)
=>
	(set-strategic-number sn-wood-gatherer-percentage 37)
	(set-strategic-number sn-food-gatherer-percentage 63)
	(set-strategic-number sn-gold-gatherer-percentage 0)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(up-research-status c: feudal-age >= research-pending)
	(current-age == feudal-age)
	(unit-type-count-total villager == 24)
	(building-type-count-total mining-camp > 0)
=>
	(set-strategic-number sn-wood-gatherer-percentage 29)
	(set-strategic-number sn-food-gatherer-percentage 55)
	(set-strategic-number sn-gold-gatherer-percentage 16)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(building-type-count-total market > 0)
	(building-type-count-total blacksmith > 0)
	(building-type-count-total farm < 9)
	(can-build farm)
=>
	(build farm)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(or(research-available castle-age)
	   (wood-amount >= 375))
	(building-type-count-total farm < 16)
	(can-build farm)
=>
	(build farm)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(can-research castle-age)
=>
	(research castle-age)
	(set-goal gl-enable-tsa 0)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age >= research-pending)
	(building-type-count-total barracks == 0)
	(can-build barracks)
=>
	(build barracks)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age >= research-pending)
	(can-research ri-scale-mail)
=>
	(research ri-scale-mail)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age >= research-pending)
	(can-research ri-chain-mail)
=>
	(research ri-chain-mail)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(can-train eagle-warrior-line)
=>
	(train eagle-warrior-line)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age == research-complete)
	(or(and(building-type-count-total barracks < 4)
	       (strategic-number sn-military-level < 1))
		(building-type-count-total barracks < 2))
	(players-unit-type-count target-player militiaman-line < 5)
	(can-build barracks)
=>
	(build barracks)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: castle-age == research-complete)
	(building-type-count-total barracks < 2)
	(players-unit-type-count target-player militiaman-line >= 5)
	(can-build barracks)
=>
	(build barracks)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: ri-chain-mail >= research-pending)
	(can-research ri-forging)
=>
	(research ri-forging)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-research-status c: ri-chain-mail >= research-pending)
	(can-research ri-iron-casting)
=>
	(research ri-iron-casting)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(current-age == castle-age)
	(can-train villager)
=>
	(train villager)
	(enable-timer 46 21)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(building-type-count-total siege-workshop == 0)
	(can-build siege-workshop)
=>
	(build siege-workshop)
)
(defrule
	(players-unit-type-count target-player militiaman-line >= 5)
	(can-train scorpion-line)
=>
	(train scorpion-line)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(can-train battering-ram-line)
=>
	(train battering-ram-line)
)
(defrule
	(strategic-number sn-castle-age-strategy == klew)
	(up-compare-goal gl-map-style != WATER) 
	(current-age == castle-age)
	(building-type-count-total mining-camp > 0)
	(building-type-count-total barracks > 0)
=>
	(set-strategic-number sn-wood-gatherer-percentage 32)
	(set-strategic-number sn-food-gatherer-percentage 42)
	(set-strategic-number sn-gold-gatherer-percentage 26)
	(set-strategic-number sn-stone-gatherer-percentage 0)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(strategic-number sn-enemy-current-age < castle-transit)
	;(strategic-number sn-military-level > 0)
	(military-population > 4)
	(up-compare-goal gl-enable-tsa < 1)
=>
	(set-goal gl-enable-tsa 1)
	(set-goal gl-tsa-duc 1)
	(up-reset-unit c: all-units-class)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(or(strategic-number sn-enemy-current-age == castle-transit)
	   (strategic-number sn-military-level > 0))
	(unit-type-count-total eagle-warrior-line > 4)
	(up-compare-goal gl-enable-tsa < 1)
=>
	(set-goal gl-enable-tsa 1)
	(set-goal gl-tsa-duc 1)
	(up-reset-unit c: all-units-class)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(strategic-number sn-enemy-current-age != castle-transit)
	(strategic-number sn-military-level < 1)
	(military-population < 4)
	(up-compare-goal gl-enable-tsa == 1)
=>
	(set-goal gl-enable-tsa 0)
	(up-reset-unit c: all-units-class)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(strategic-number sn-enemy-current-age != castle-transit)
	(unit-type-count-total eagle-warrior-line > 4)
	(up-research-status c: ri-chain-mail >= research-pending)
	(military-population > 8)
	(up-compare-goal gl-enable-tsa != 1)
=>
	(set-goal gl-enable-tsa 1)
	(set-goal gl-tsa-duc 1)
	(up-reset-unit c: all-units-class)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(or(strategic-number sn-enemy-current-age >= castle-transit)
	   (military-population > 8))
	(up-compare-goal gl-enemy-strategy == fast-castle)
	(up-compare-goal gl-enable-tsa < 1)
=>
	(set-goal gl-enable-tsa 1)
	(set-goal gl-tsa-duc 1)
	(up-reset-unit c: all-units-class)
)
(defrule
	(up-compare-goal gl-map-style != WATER) 
	(strategic-number sn-castle-age-strategy == klew)
	(strategic-number sn-enemy-current-age < castle-transit)
	(strategic-number sn-military-level < 1)
	(military-population < 4)
	(up-compare-goal gl-enable-tsa == 1)
=>
	(set-goal gl-enable-tsa 0)
	(up-reset-unit c: all-units-class)
)
(defrule
	(game-time > 1725)
	(strategic-number sn-castle-age-strategy == klew)
	(strategic-number sn-castle-age-strategy != eagle-rush)
=>
	(set-strategic-number sn-castle-age-strategy eagle-rush)
)
(load "Brutal2\EagleRush")